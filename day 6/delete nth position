package com.palle;

//Node.java
class Node11 {
 int data;
 Node11 next;

 public Node11(int data) {
     this.data = data;
     this.next = null;
 }
}

//DeleteNthNode.java
public class DeleteNthNode {
 private Node11 head;

 public DeleteNthNode() {
     this.head = null;
 }

 public void insertAtEnd(int data) {
     Node11 newNode = new Node11(data);
     if (head == null) {
         head = newNode;
         return;
     }
     Node11 temp = head;
     while (temp.next != null) {
         temp = temp.next;
     }
     temp.next = newNode;
 }

 public void deleteAtPosition(int position) {
     if (head == null) {
         System.out.println("List is empty!");
         return;
     }

     if (position == 1) {
         head = head.next;
         return;
     }

     Node11 temp = head;
     for (int i = 1; i < position - 1 && temp != null; i++) {
         temp = temp.next;
     }

     if (temp == null || temp.next == null) {
         System.out.println("Position out of range!");
         return;
     }

     temp.next = temp.next.next;
 }

 public void printList() {
     Node11 temp = head;
     while (temp != null) {
         System.out.print(temp.data + " -> ");
         temp = temp.next;
     }
     System.out.println("null");
 }

 public static void main(String[] args) {
     DeleteNthNode list = new DeleteNthNode();

     list.insertAtEnd(10);
     list.insertAtEnd(20);
     list.insertAtEnd(30);
     list.insertAtEnd(40);

     System.out.println("Before deletion:");
     list.printList();

     list.deleteAtPosition(3);
     System.out.println("After deletion:");
     list.printList();
 }
}
